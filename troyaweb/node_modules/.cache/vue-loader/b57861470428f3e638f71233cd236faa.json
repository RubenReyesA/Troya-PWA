{"remainingRequest":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/src/views/Home.vue","mtime":1601567283451},{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/RepoGitHub/Troya-PWA/troyaweb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImhvbWUiPgogIDxkaXYgY2xhc3M9InRyeSI+CiAgICA8ZGl2IGlkPSJ0aXRsZVByb3hQYXJ0aWRvIj4KICAgICAgPGgzIGNsYXNzPSJibGFjay0tdGV4dCI+e3sgdGV4dCB9fTwvaDM+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9IkZlY2hhSG9yYVBhcnRpZG8iPgogICAgICA8aDI+e3sgZGF0ZSB9fTwvaDI+CiAgICAgIDxoMj57eyBob3VyIH19PC9oMj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0iTWF0Y2hMYXlvdXQiPgogICAgICA8ZGl2IGlkPSJsb2NhbFRlYW0iIGNsYXNzPSJ0ZWFtY29udGFpbmVyIj4KICAgICAgICA8di1pbWcKICAgICAgICAgIDpzcmM9ImxvY2FsVGVhbS5pbWciCiAgICAgICAgICB3aWR0aD0iODBweCIKICAgICAgICAgIGNsYXNzPSJoaWRkZW4tbWQtYW5kLXVwIgogICAgICAgID48L3YtaW1nPgogICAgICAgIDx2LWltZwogICAgICAgICAgOnNyYz0ibG9jYWxUZWFtLmltZyIKICAgICAgICAgIHdpZHRoPSIxNTBweCIKICAgICAgICAgIGNsYXNzPSJoaWRkZW4tc20tYW5kLWRvd24iCiAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgPHAgY2xhc3M9InRleHRIb21lIj57eyBsb2NhbFRlYW0ubmFtZSB9fTwvcD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IHYtaWY9InNob3dWUyIgY2xhc3M9InJlc3VsdGNvbnRhaW5lciI+CiAgICAgICAgPHYtaW1nCiAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9FeHRyYXMvTWFyY2Fkb3Jlcy9udnMucG5nIgogICAgICAgICAgd2lkdGg9IjUwcHgiCiAgICAgICAgICBzdHlsZT0ibWFyZ2luOiA1cHgiCiAgICAgICAgICBjbGFzcz0iaGlkZGVuLW1kLWFuZC11cCIKICAgICAgICA+PC92LWltZz4KCiAgICAgICAgPHYtaW1nCiAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9FeHRyYXMvTWFyY2Fkb3Jlcy9udnMucG5nIgogICAgICAgICAgd2lkdGg9Ijc1cHgiCiAgICAgICAgICBzdHlsZT0ibWFyZ2luOiA1cHgiCiAgICAgICAgICBjbGFzcz0iaGlkZGVuLXNtLWFuZC1kb3duIgogICAgICAgID48L3YtaW1nPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgdi1pZj0ic2hvd1Jlc3VsdCIgaWQ9InJlc3VsdFNjb3JlIiBjbGFzcz0icmVzdWx0Y29udGFpbmVyIj4KICAgICAgICA8di1pbWcKICAgICAgICAgIDpzcmM9ImxvY2FsVGVhbS5zY29yZSIKICAgICAgICAgIHdpZHRoPSI1MHB4IgogICAgICAgICAgc3R5bGU9Im1hcmdpbjogNXB4IgogICAgICAgICAgY2xhc3M9ImhpZGRlbi1tZC1hbmQtdXAiCiAgICAgICAgPjwvdi1pbWc+CgogICAgICAgIDx2LWltZwogICAgICAgICAgOnNyYz0ibG9jYWxUZWFtLnNjb3JlIgogICAgICAgICAgd2lkdGg9Ijc1cHgiCiAgICAgICAgICBzdHlsZT0ibWFyZ2luOiA1cHgiCiAgICAgICAgICBjbGFzcz0iaGlkZGVuLXNtLWFuZC1kb3duIgogICAgICAgID48L3YtaW1nPgoKICAgICAgICA8cCBzdHlsZT0iZm9udC1zaXplOiA3NXB4IiBjbGFzcz0ic3BhY2VyIj4tPC9wPgoKICAgICAgICA8di1pbWcKICAgICAgICAgIDpzcmM9InZpc2l0YW50ZVRlYW0uc2NvcmUiCiAgICAgICAgICB3aWR0aD0iNTBweCIKICAgICAgICAgIHN0eWxlPSJtYXJnaW46IDVweCIKICAgICAgICAgIGNsYXNzPSJoaWRkZW4tbWQtYW5kLXVwIgogICAgICAgID48L3YtaW1nPgoKICAgICAgICA8di1pbWcKICAgICAgICAgIDpzcmM9InZpc2l0YW50ZVRlYW0uc2NvcmUiCiAgICAgICAgICB3aWR0aD0iNzVweCIKICAgICAgICAgIHN0eWxlPSJtYXJnaW46IDVweCIKICAgICAgICAgIGNsYXNzPSJoaWRkZW4tc20tYW5kLWRvd24iCiAgICAgICAgPjwvdi1pbWc+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0idmlzaXRhbnRlVGVhbSIgY2xhc3M9InRlYW1jb250YWluZXIiPgogICAgICAgIDx2LWltZwogICAgICAgICAgOnNyYz0idmlzaXRhbnRlVGVhbS5pbWciCiAgICAgICAgICB3aWR0aD0iODBweCIKICAgICAgICAgIGNsYXNzPSJoaWRkZW4tbWQtYW5kLXVwIgogICAgICAgID48L3YtaW1nPgogICAgICAgIDx2LWltZwogICAgICAgICAgOnNyYz0idmlzaXRhbnRlVGVhbS5pbWciCiAgICAgICAgICB3aWR0aD0iMTUwcHgiCiAgICAgICAgICBjbGFzcz0iaGlkZGVuLXNtLWFuZC1kb3duIgogICAgICAgID48L3YtaW1nPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0SG9tZSI+e3sgdmlzaXRhbnRlVGVhbS5uYW1lIH19PC9wPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDx2LWFsZXJ0IHR5cGU9ImluZm8iIGlkPSJob21lQ29tbWVudCI+e3sgY29tbWVudCB9fTwvdi1hbGVydD4KCiAgICA8di1yb3cganVzdGlmeT0iY2VudGVyIj4KICAgICAgPHYtZGlhbG9nIHYtbW9kZWw9IkdQU0RpYWxvZyIgcGVyc2lzdGVudCBtYXgtd2lkdGg9Ijg1dnciPgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICB2LWJpbmQ9ImF0dHJzIgogICAgICAgICAgICB2LW9uPSJvbiIKICAgICAgICAgICAgY29sb3I9ImJsdWUtZ3JleSIKICAgICAgICAgICAgZGFyawogICAgICAgICAgICBjbGFzcz0ibWEtMiB3aGl0ZS0tdGV4dCIKICAgICAgICAgICAgQGNsaWNrPSJsb2FkR1BTIgogICAgICAgICAgPgogICAgICAgICAgICA8di1pY29uIGxlZnQ+bWRpLW1hcC1tYXJrZXI8L3YtaWNvbj5Db25kdWNpciBhbCBjYW1wbwogICAgICAgICAgPC92LWJ0bj4KICAgICAgICA8L3RlbXBsYXRlPgoKICAgICAgICA8di1jYXJkPgogICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUiPiBDb25kdWNpciBhbCBjYW1wbyA8L3YtY2FyZC10aXRsZT4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cnkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJncHNEYXRhIiBzdHlsZT0id2lkdGg6ODB2dyI+CiAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi1yaWdodDogMTBweDsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUiPgogICAgICAgICAgICAgICAgTm9tYnJlOgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8cD57eyBzZWxlY3RlZE5hbWUgfX08L3A+CiAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi1yaWdodDogMTBweDsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUiPgogICAgICAgICAgICAgICAgRGlyZWNjacOzbjoKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPHA+e3sgc2VsZWN0ZWRMb2NhdGlvbiB9fTwvcD4KICAgICAgICAgICAgICA8cCBzdHlsZT0ibWFyZ2luLXJpZ2h0OiAxMHB4OyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSI+CiAgICAgICAgICAgICAgICBDb29yZGVuYWRhczoKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgPHA+e3sgc2VsZWN0ZWRDb29yZHMgfX08L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbG90aGVzRGF0YSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xvdGhlc0ltYWdlcyI+CiAgICAgICAgICAgICAgICA8di1pbWcgY2xhc3M9ImNQaWN0IiA6c3JjPSJzaGlydCI+IDwvdi1pbWc+CiAgICAgICAgICAgICAgICA8cCBzdHlsZT0iY29sb3I6IHdoaXRlIj5ra2tra2s8L3A+CiAgICAgICAgICAgICAgICA8di1pbWcgY2xhc3M9ImNQaWN0IiA6c3JjPSJwYW50cyI+IDwvdi1pbWc+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgaWQ9InRleHQiPlZlc3RpbWVudGE8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9ImNsb3RoZXNEYXRhMiI+CiAgICAgICAgICA8di1hbGVydCB0eXBlPSJpbmZvIj57ewogICAgICAgICAgICBHUFNjb21tZW50CiAgICAgICAgICB9fTwvdi1hbGVydD4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9ImNsb3RoZXNEYXRhMiI+CiAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICBjbGFzcz0iYnRuTWFwcyIKICAgICAgICAgICAgICBjb2xvcj0ic2Vjb25kYXJ5IgogICAgICAgICAgICAgIGxhcmdlCiAgICAgICAgICAgICAgQGNsaWNrPSJkcml2ZVRvKDEpIgogICAgICAgICAgICAgID5Hb29nbGUgTWFwczwvdi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICBjbGFzcz0iYnRuTWFwcyIKICAgICAgICAgICAgICBjb2xvcj0ic2Vjb25kYXJ5IgogICAgICAgICAgICAgIGxhcmdlCiAgICAgICAgICAgICAgQGNsaWNrPSJkcml2ZVRvKDIpIgogICAgICAgICAgICAgID5BcHBsZSBNYXBzIChpT1MpPC92LWJ0bgogICAgICAgICAgICA+CiAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgIGNsYXNzPSJidG5NYXBzIgogICAgICAgICAgICAgIGNvbG9yPSJzZWNvbmRhcnkiCiAgICAgICAgICAgICAgbGFyZ2UKICAgICAgICAgICAgICBAY2xpY2s9ImRyaXZlVG8oMykiCiAgICAgICAgICAgICAgPldhemU8L3YtYnRuCiAgICAgICAgICAgID4KICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgY2xhc3M9ImJ0bk1hcHMiCiAgICAgICAgICAgICAgY29sb3I9InNlY29uZGFyeSIKICAgICAgICAgICAgICBsYXJnZQogICAgICAgICAgICAgIEBjbGljaz0iZHJpdmVUbyg0KSIKICAgICAgICAgICAgICA+T3Ryb3MgKEFuZHJvaWQpPC92LWJ0bgogICAgICAgICAgICA+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8di1jYXJkLWFjdGlvbnM+CiAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICA8di1idG4gY29sb3I9ImdyZWVuIGRhcmtlbi0xIiB0ZXh0IEBjbGljaz0iR1BTRGlhbG9nID0gZmFsc2UiPgogICAgICAgICAgICAgIENlcnJhcgogICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgPC92LWNhcmQtYWN0aW9ucz4KICAgICAgICA8L3YtY2FyZD4KICAgICAgPC92LWRpYWxvZz4KICAgIDwvdi1yb3c+CiAgPC9kaXY+CjwvZGl2Pgo="},null]}